logging.level.root=INFO

logging.level.org.springframework.security=DEBUG

logging.level.ru.intf.sasha=DEBUG
#
spring.datasource.url=jdbc:postgresql://localhost:5432/coffeeandtea
spring.datasource.username=postgres
spring.datasource.password=admin
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.port = 8081
#server.ssl.key-store = keystore.jks
#server.ssl.key-alias = tomcat
#server.ssl.key-store-password = {$password}
#server.ssl.keyStoreType = JKS
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
# spring.security.secure-channel.use-header-values=true
spring.security.enabled=false
spring.mvc.async.request-timeout=0
server.tomcat.use-relative-redirects=false
#spring.liquibase.drop-first=true
gigachat.client.id=
gigachat.client.secret=
spring.kafka.bootstrap-servers=158.160.62.181:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Weather API Configuration
weather.api.key=demo_key
weather.api.base-url=https://api.openweathermap.org/data/2.5