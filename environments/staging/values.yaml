# Staging environment configuration
# Production-like configuration for testing

global:
  environment: staging
  domain: staging.example.com

image:
  tag: "staging"
  pullPolicy: IfNotPresent

replicaCount: 2

resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 1Gi

# Enable autoscaling for staging
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s

podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Staging database settings - production-like
postgresql:
  enabled: true
  auth:
    postgresPassword: "staging-secure-password"
    database: "coffee_and_tea_staging"
  primary:
    persistence:
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi
  metrics:
    enabled: true

# Staging Kafka settings
kafka:
  enabled: true
  controller:
    replicaCount: 3
    persistence:
      size: 20Gi
  broker:
    replicaCount: 3
    persistence:
      size: 30Gi
  metrics:
    kafka:
      enabled: true

# Enable TLS for staging
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  tls:
    - secretName: coffee-and-tea-staging-tls
      hosts:
        - coffee-staging.example.com
  hosts:
    - host: coffee-staging.example.com
      paths:
        - path: /
          pathType: Prefix

# Enable Istio for staging
istio:
  enabled: true
  gateway:
    enabled: true
    hosts:
      - coffee-staging.example.com
    tls:
      mode: SIMPLE
      credentialName: coffee-and-tea-staging-tls
  virtualService:
    enabled: true
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  destinationRule:
    enabled: true
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
      circuitBreaker:
        consecutiveErrors: 5
        interval: 30s
        baseEjectionTime: 30s

# External services configuration
externalServices:
  openWeatherMap:
    enabled: true
    apiKey: "staging-api-key"  # Replace with actual API key
    baseUrl: "http://api.openweathermap.org/data/2.5"

# Staging-specific feature flags
features:
  enableDemoMode: false
  enableDebugLogging: false
  enablePerformanceMetrics: true

# Security settings for staging
security:
  jwt:
    secret: "staging-jwt-secret-key-change-in-production"
    expiration: 3600  # 1 hour
  pod:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 2000

# Network policies
networkPolicies:
  enabled: true
  ingress:
    enabled: true
  egress:
    enabled: true