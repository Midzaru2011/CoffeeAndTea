# Development configuration example for Coffee and Tea application

# Single replica for development
replicaCount: 1

image:
  repository: midzaru2011/coffeeandtea
  tag: "latest"
  pullPolicy: Always

# Development resource limits (lower requirements)
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# Disable autoscaling in development
autoscaling:
  enabled: false

# Lightweight PostgreSQL for development
postgresql:
  enabled: true
  auth:
    postgresPassword: "dev-password"
    username: "dev_user"
    password: "dev-password"
    database: "CoffeeAndTea"
  architecture: standalone
  primary:
    persistence:
      enabled: true
      size: 1Gi
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Lightweight Kafka for development  
kafka:
  enabled: true
  controller:
    replicaCount: 1
  broker:
    replicaCount: 1
    persistence:
      enabled: true
      size: 1Gi
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  logRetentionHours: 24
  defaultReplicationFactor: 1
  offsetsTopicReplicationFactor: 1
  transactionStateLogReplicationFactor: 1
  transactionStateLogMinIsr: 1

# Disable Istio for development
istio:
  enabled: false

# Simple ingress for development
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: coffee-and-tea.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Demo weather API for development
externalServices:
  openWeatherMap:
    enabled: true
    apiKey: "demo_key"
    baseUrl: "https://api.openweathermap.org/data/2.5"

# Application configuration for development
app:
  config:
    server:
      port: 8081
    spring:
      profiles:
        active: "development"
    weather:
      api:
        key: "demo_key"
        baseUrl: "https://api.openweathermap.org/data/2.5"
    logging:
      level:
        root: "INFO"
        "ru.intf.sasha": "DEBUG"

# Relaxed health checks for development
livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 5

# Enable monitoring for development
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /actuator/prometheus

# Disable pod disruption budget for development
podDisruptionBudget:
  enabled: false

# No special node affinity for development
affinity: {}

# Relaxed security context for development
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

podSecurityContext:
  fsGroup: 1000